<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.bitsanity</groupId>
	<artifactId>bitchange</artifactId>
	<version>0.0.${build.number}</version>
	<name>Bitcoin Exchanger</name>
	<description>Bitsanity Bitcoin Exchanger</description>
	<organization>
		<name>Bitsanity</name>
	</organization>

	<properties>
		<java.version>1.8</java.version>
		<jetty.version>9.1.0.v20131115</jetty.version>
		<servlet-api.version>3.1.0</servlet-api.version>

		<!-- Trigger for build timestamp generation -->
		<maven.build.timestamp.format>yyyy-MM-dd_HHmm</maven.build.timestamp.format>
		<!-- Need to define new property since this one won't get passed (bug: http://jira.codehaus.org/browse/MRESOURCES-99) -->
		<project.build.timestamp>${maven.build.timestamp}</project.build.timestamp>

		<!-- Default build number if not supplied via command line -->
		<build.number>1-SNAPSHOT</build.number>

		<!-- Default behavior is to ignore integration tests -->
		<exclude.Integration.tests>**/*IntegrationTest.java</exclude.Integration.tests>

	</properties>

	<profiles>

		<profile>
			<id>jetty</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<dependencies>
				<!-- JETTY WEB SERVER CORE -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-jetty</artifactId>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<!-- Add jetty specific source -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>add-source</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/main/jetty</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Append jetty to final names -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<finalName>${project.artifactId}-jetty-${project.version}</finalName>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<finalName>${project.artifactId}-jetty-${project.version}</finalName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>tomcat</id>

			<dependencies>
				<!-- Tomcat WEB SERVER CORE -->
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</dependency>
			</dependencies>

			<build>
				<plugins>
					<plugin>
						<!-- Add tomcat specific source -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>add-common-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/main/tomcat</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Append tomcat to final name -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<finalName>${project.artifactId}-tomcat-${project.version}</finalName>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<finalName>${project.artifactId}-tomcat-${project.version}</finalName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>CI-build</id>
			<properties>
				<exclude.Integration.tests>ThisWillMatchNothing</exclude.Integration.tests>
			</properties>

			<build>
				<resources>
					<resource>
						<directory>deploy/build.server</directory>
						<includes>
							<include>application.properties</include>
						</includes>
						<targetPath>${project.build.directory}/../config</targetPath>
					</resource>
					<resource>
						<filtering>true</filtering>
						<directory>src/main/resources</directory>
						<targetPath>${project.build.directory}/classes</targetPath>
					</resource>
				</resources>
			</build>
		</profile>

	</profiles>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.4.RELEASE</version>
	</parent>

	<dependencies>
		<!-- Awaiting bug fix in 1.1.8:  ERROR in ch.qos.logback.core.joran.action.NestedBasicPropertyIA - Unexpected aggregationType AS_BASIC_PROPERTY_COLLECTION -->
		<!-- https://github.com/logstash/logstash-logback-encoder/issues/160 -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.6</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.1.6</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>4.7</version>
		</dependency>

		<!-- WEB SERVER CORE -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- runtime JMX information -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>

		<!-- Bitcoin - https://mvnrepository.com/artifact/org.bitcoinj/bitcoinj-core -->
		<dependency>
			<groupId>org.bitcoinj</groupId>
			<artifactId>bitcoinj-core</artifactId>
			<version>0.14.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path -->
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.4.0</version><!--$NO-MVN-MAN-VER$-->
		</dependency>
		
		<!-- database access -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- 
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc7</artifactId>
			<version>12.1.0.2.0</version>
		</dependency>
		-->

		<!-- Spring security and authentication -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<!-- Support libraries -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.2</version>
		</dependency>

		<!-- Logging dependencies -->
		<!-- EvaluatorFilter -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<!-- <version>2.7.8</version> -->
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<!-- 
			<scope>test</scope>
			 -->
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>spring-milestones</id>
			<url>http://repo.spring.io/milestone</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<url>http://repo.spring.io/snapshot</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<url>http://repo.spring.io/milestone</url>
		</pluginRepository>
		<pluginRepository>
			<id>jacoco-snapshot-repository</id>
			<name>JaCoCo Snapshot Build Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<layout>default</layout>
		</pluginRepository>
	</pluginRepositories>

	<!-- Package as an executable jar -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<excludes>
						<exclude>**/tomcat/**</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Need to not reuse forks to prevent wallet NIO lock -->
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
					<excludes>
						<exclude>**/IoTaRemote*Test.java</exclude>
						<exclude>${exclude.Integration.tests}</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Prevent creation of uber jar 
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			-->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-common-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/jetty</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>deploy</directory>
									<targetPath>scripts</targetPath>
									<include>*.sql</include>
								</resource>
								<resource>
									<directory>deploy/build.server</directory>
									<targetPath>scripts</targetPath>
									<include>*.sql</include>
								</resource>
								<!-- <source>deploy/user_auth.sql</source> <source>deploy/build.server/user_auth_seed.sql</source> -->
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo>[maven.build.timestamp] ${maven.build.timestamp}</echo>
								<echo>[project.build.directory] ${project.build.directory}</echo>
								<echo>Using schema: ${spring.datasource.username}</echo>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Create a source and test jar, too 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<finalName>${project.artifactId}-jetty-${project.version}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
			
			<!-- Create and publish SQL jar -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>create-ddl-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>assembly</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/ddl-descriptor.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>${project.build.directory}/${project.artifactId}-${project.version}-ddl.jar</file>
									<type>jar</type>
									<classifier>ddl</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<!-- 
				<version>0.7.6.201602180812</version>
				<version>0.7.7.201606060606</version>
				 -->
				<version>0.7.9</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<excludes>
								<!-- Exclude MDC class -->
								<exclude>**/MdcForkJoinPool*.class</exclude>
								<exclude>**/*NullResponseErrorHandler.class</exclude>
								<!-- 
								<exclude>**/*BitcoinExchangeService.2*.class</exclude>					
								<exclude>**/*BitcoinExchangeService?*.class</exclude>					
								 -->
								<exclude>**/*BitcoinExchangeService$2$1.class</exclude>					
							</excludes>
							<rules>
								<!-- implementation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>
										<!-- implementation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.65</minimum>
										</limit>
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.60</minimum>
										</limit>
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
